{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js","components/Filter/Filter.module.css"],"names":["module","exports","ContactForm","state","name","number","nameInputId","shortid","generate","phoneNumberId","handleContactInputChange","e","currentTarget","value","setState","handleContactSubmit","preventDefault","props","exsisted","alert","reset","onAddNewContact","this","className","s","phonebookTitle","form","onSubmit","htmlFor","label","labelDescription","type","id","input","onChange","addContactBtn","Component","ContactsList","contacts","onDeleteContact","contactsList","map","ContactsListItem","contact","deleteBtn","onClick","protoTypes","PropTypes","array","isRequired","func","Filter","changeFilter","filterInputId","contactsSection","contactsTitle","findDescription","App","filter","addNewContact","uuidv4","deleteContact","contactId","prevState","getExistedContact","find","getFilteredContacts","normalizedFilter","toLocaleLowerCase","includes","localStorage","getItem","parsedContacts","JSON","parse","prevProps","nextContacts","setItem","stringify","filteredContacts","ContactList","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e5ad5b23.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"phonebookTitle\":\"ContactForm_phonebookTitle__2hsoi\",\"form\":\"ContactForm_form__317pr\",\"label\":\"ContactForm_label__11CEZ\",\"labelDescription\":\"ContactForm_labelDescription__2gGuX\",\"input\":\"ContactForm_input__2mRkP\",\"addContactBtn\":\"ContactForm_addContactBtn__hHLxz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"ContactList_contactsList__Fs4zz\",\"ContactsListItem\":\"ContactList_ContactsListItem__1jfJL\",\"contact\":\"ContactList_contact__1sXlu\",\"name\":\"ContactList_name__2T9JV\",\"number\":\"ContactList_number__3Gri_\",\"deleteBtn\":\"ContactList_deleteBtn__2dwe6\"};","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport shortid from 'shortid';\r\nimport s from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  static propTypes = {\r\n    onAddNewContact: PropTypes.func,\r\n    exsisted: PropTypes.func,\r\n  };\r\n\r\n  nameInputId = shortid.generate();\r\n  phoneNumberId = shortid.generate();\r\n\r\n  handleContactInputChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleContactSubmit = e => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n\r\n    if (this.props.exsisted(name)) {\r\n      alert(`${name} is alredy in contacts.`);\r\n      this.reset();\r\n      return;\r\n    }\r\n\r\n    this.props.onAddNewContact(name, number);\r\n\r\n    this.reset();\r\n  };\r\n\r\n  reset() {\r\n    this.setState({ name: '', number: '' });\r\n  }\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <h1 className={s.phonebookTitle}>Phonebook</h1>\r\n        <form className={s.form} onSubmit={this.handleContactSubmit}>\r\n          <label htmlFor={this.nameInputId} className={s.label}>\r\n            <span className={s.labelDescription}> Name</span>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              id={this.nameInputId}\r\n              className={s.input}\r\n              onChange={this.handleContactInputChange}\r\n            />\r\n          </label>\r\n\r\n          <label htmlFor={this.phoneNumberId} className={s.label}>\r\n            <span className={s.labelDescription}>Number</span>\r\n            <input\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              value={number}\r\n              id={this.phoneNumberId}\r\n              className={s.input}\r\n              onChange={this.handleContactInputChange}\r\n            />\r\n          </label>\r\n\r\n          <button type=\"submit\" className={s.addContactBtn}>\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactsList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <ul className={s.contactsList}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id} className={s.ContactsListItem}>\r\n          <p className={s.contact}>\r\n            <span className={s.name}>{name}:</span>\r\n            <span className={s.number}>{number}</span>\r\n          </p>\r\n          <button className={s.deleteBtn} onClick={() => onDeleteContact(id)}>\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactsList.protoTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  onDeleteContact: PropTypes.func,\r\n};\r\n\r\nexport default ContactsList;\r\n","import s from './Filter.module.css';\r\nimport PropTypes from 'prop-types';\r\nimport shortid from 'shortid';\r\n\r\nconst Filter = ({ value, changeFilter }) => {\r\n  const filterInputId = shortid.generate();\r\n\r\n  return (\r\n    <section className={s.contactsSection}>\r\n      <h2 className={s.contactsTitle}>Contacts</h2>\r\n      <label htmlFor={filterInputId} className={s.label}>\r\n        <span className={s.findDescription}>Find contact by name:</span>\r\n        <input\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          value={value}\r\n          id={filterInputId}\r\n          className={s.input}\r\n          onChange={changeFilter}\r\n        />\r\n      </label>\r\n    </section>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  changeFilter: PropTypes.func,\r\n};\r\n\r\nexport default Filter;\r\n","import { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport ContactForm from './components/ContactForm';\r\nimport ContactList from './components/ContactList';\r\nimport Filter from './components/Filter';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    const contacts = localStorage.getItem('contacts');\r\n    const parsedContacts = JSON.parse(contacts);\r\n\r\n    if (parsedContacts) {\r\n      this.setState({ contacts: parsedContacts });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const nextContacts = this.state.contacts;\r\n    const prevContacts = prevState.contacts;\r\n\r\n    if (nextContacts !== prevContacts) {\r\n      localStorage.setItem('contacts', JSON.stringify(nextContacts));\r\n    }\r\n  }\r\n\r\n  addNewContact = (name, number) => {\r\n    const contact = {\r\n      id: uuidv4(),\r\n      name,\r\n      number,\r\n    };\r\n\r\n    this.setState(({ contacts }) => ({ contacts: [contact, ...contacts] }));\r\n  };\r\n\r\n  deleteContact = contactId => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\r\n    }));\r\n  };\r\n\r\n  changeFilter = e => {\r\n    this.setState({ filter: e.currentTarget.value });\r\n  };\r\n\r\n  getExistedContact = name => {\r\n    const { contacts } = this.state;\r\n    return contacts.find(contact => contact.name === name);\r\n  };\r\n\r\n  getFilteredContacts = () => {\r\n    const { filter, contacts } = this.state;\r\n    const normalizedFilter = filter.toLocaleLowerCase();\r\n\r\n    return contacts.filter(contact =>\r\n      contact.name.toLocaleLowerCase().includes(normalizedFilter),\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { filter } = this.state;\r\n    const filteredContacts = this.getFilteredContacts();\r\n\r\n    return (\r\n      <>\r\n        <ContactForm\r\n          onAddNewContact={this.addNewContact}\r\n          exsisted={this.getExistedContact}\r\n        />\r\n        <Filter value={filter} changeFilter={this.changeFilter} />\r\n        <ContactList\r\n          contacts={filteredContacts}\r\n          onDeleteContact={this.deleteContact}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsSection\":\"Filter_contactsSection__31dsd\",\"contactsTitle\":\"Filter_contactsTitle__2FXTh\",\"label\":\"Filter_label__3fDHP\",\"findDescription\":\"Filter_findDescription__1pksK\",\"input\":\"Filter_input__WO6DP\"};"],"sourceRoot":""}